# ```
# 📘 Pandas & Numpy 복습 문제 ①~⑤ 🧪  
# ────────────────────────────────────

# ❓ Q1. 다음 코드 실행 결과는?  
# ```python
# import pandas as pd
# data = pd.Series([10, 20, 30], index=["a", "b", "c"])
# print(data.loc["b"])
#```

# ① 10  
# ② 20  
# ③ b  
# ④ 오류 발생
#답 2
# ────────────────────────────

# ❓ Q2. 아래 중 Numpy의 특징으로 올바르지 않은 것은?  

# ① 배열 요소마다 수학 연산을 한 번에 적용할 수 있다.  
# ② 리스트와 동일한 방식으로 곱셈을 하면 반복된다.  
# ③ 조건식을 통해 필터링할 수 있다.  
# ④ 벡터화 연산이 가능하다.  
#답 2
# ────────────────────────────

# ❓ Q3. 다음 중 DataFrame을 생성하고 인덱스/컬럼을 지정하는 코드로 올바른 것은?

# ① `pd.DataFrame([[1,2],[3,4]], index=["a","b"], columns=["x","y"])`  
# ② `pd.Series([[1,2],[3,4]], index=["a","b"], columns=["x","y"])`  
# ③ `pd.DataFrame(data=[1,2,3], columns=["A", "B"])`  
# ④ `pd.Series(data=[[1,2],[3,4]], columns=["x","y"])`  
#답 1
# ────────────────────────────

# ❓ Q4. 다음 중 `iloc`과 `loc`의 차이를 설명한 것으로 알맞은 것은?

# ① `iloc`은 라벨 기반 접근, `loc`은 정수 인덱스 기반 접근  
# ② `loc`은 라벨 기반 접근, `iloc`은 정수 인덱스 기반 접근  
# ③ 둘 다 같은 방식으로 동작한다  
# ④ `iloc`은 문자열 인덱스만 사용할 수 있다  
#답 2
# ────────────────────────────

# ❓ Q5. CSV 파일에서 첫 번째 열을 인덱스로 사용하고자 할 때 사용하는 옵션은?

# ① `read_csv("파일.csv", header=0)`  
# ② `read_csv("파일.csv", index_col=0)`  
# ③ `read_csv("파일.csv", axis=1)`  
# ④ `read_csv("파일.csv", usecols=[0])`  
#답 2

# 📘 Pandas & Numpy 복습 문제 ⑥~⑩ 🧪  
# ────────────────────────────────────

# ❓ Q6. 다음 중 `data.iloc[2]`의 의미를 올바르게 설명한 것은?

# ① 인덱스 이름이 '2'인 데이터를 반환한다  
# ② 세 번째 행(0부터 시작)의 데이터를 반환한다  
# ③ 열 이름이 2인 데이터를 반환한다  
# ④ 오류가 발생한다
#답 2
# ────────────────────────────

# ❓ Q7. 다음 중 Series를 생성하는 코드로 올바른 것은?

# ① `pd.Series([1,2,3], ["x", "y", "z"])`  
# ② `pd.Series(data=[1,2,3], index=["x", "y", "z"])`  
# ③ `pd.Series({1: "x", 2: "y", 3: "z"})`  
# ④ 모두 올바르다
#답4
# ────────────────────────────

# ❓ Q8. 아래 코드의 출력 결과로 올바른 것은?
# python
# import numpy as np
# data = np.array([5, 10, 15, 20])
# print(data[data > 10])


# ① [10 15 20]  
# ② [15 20]  
# ③ [5 10]  
# ④ [20]
#답 2
# ────────────────────────────

# ❓ Q9. 다음 중 DataFrame에서 특정 '행'을 가져오는 코드로 알맞은 것은?

# ① `data["열이름"]`  
# ② `data.loc["행이름"]`  
# ③ `data[1]`  
# ④ `data.iloc["1행"]`
#답 2
# ────────────────────────────

# ❓ Q10. 다음 중 Pandas로 2차원 배열을 DataFrame으로 만들면서 컬럼명을 지정하는 방법은?

# ① `pd.DataFrame([[1,2],[3,4]], columns=["A", "B"])`  
# ② `pd.DataFrame(data=[1,2,3], columns=["A", "B"])`  
# ③ `pd.DataFrame([[1,2],[3,4]], index=["A", "B"])`  
# ④ `pd.DataFrame(columns=["A", "B"], [[1,2],[3,4]])`

#답 1
